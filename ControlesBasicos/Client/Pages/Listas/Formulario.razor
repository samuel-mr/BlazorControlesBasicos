@page "/listas/ejemploA"

@using ControlesBasicos.Client.Pages.Listas

<!-- CABECERA -->
<div>
  <div class="form-group row">
    <label for="txtNombre" class="col-sm-2 col-form-label">Nombre </label>
    <div class="col-sm-10">
      <input type="text" class="form-control" id="txtNombre" placeholder="Nombre">
    </div>
  </div>
</div>

<br />

<!-- DETALLE -->
<button @onclick="Agregar">Agregar</button>

<table class="table table-sm w-auto">
  <thead>
    <tr>
      <th>Id</th>
      <th>Nombre</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var item in PersonasList)
    {
      <tr>
        <td>@item.PersonaId</td>
        <td>@item.Nombre</td>
      </tr>
    }
  </tbody>
</table>
<p>
  @PersonasList.Count items en la lista
</p>

<SearchDialog @ref="SearchDialogBaseReference" CloseEventCallback="ItemSeleccionado"></SearchDialog>

@code{

  // Esta propiedad no se inicializa, es un truco para que el SearchDialog declarado pueda ser usado desde el codigo de C# directamente
  public SearchDialog SearchDialogBaseReference { get; set; }

  List<Persona> PersonasList { get; set; } = new List<Persona>();

  protected override async Task OnInitializedAsync()
  {

  }

  async Task Agregar()
  {
    var result = await GetAllPeople();
    if (result != null && result.Count > 0)
    {
      SearchDialogBaseReference.Show(result);
    }
  }

  async Task ItemSeleccionado(CloseEvenItem item)
  {
    if (item != null)
    {
      PersonasList.Add(new Persona()
      {
        PersonaId = item.Value,
        Nombre = item.Text
      });
      SearchDialogBaseReference.Close();
    }
  }



  async Task<List<Persona>> GetAllPeople()
  {
    var temp = new List<Persona>();
    temp.Add(new Persona() { PersonaId = 1, Nombre = "Sebastian Bach" });
    temp.Add(new Persona() { PersonaId = 2, Nombre = "Johanes Beethoven" });
    temp.Add(new Persona() { PersonaId = 3, Nombre = "Nicollo Paganinni" });
    temp.Add(new Persona() { PersonaId = 4, Nombre = "Sebastian Bach" });
    temp.Add(new Persona() { PersonaId = 5, Nombre = "Johanes Beethoven" });
    temp.Add(new Persona() { PersonaId = 6, Nombre = "Nicollo Paganinni" });
    temp.Add(new Persona() { PersonaId = 7, Nombre = "Sebastian Bach" });
    temp.Add(new Persona() { PersonaId = 8, Nombre = "Johanes Beethoven" });
    temp.Add(new Persona() { PersonaId = 9, Nombre = "Nicollo Paganinni" });
    temp.Add(new Persona() { PersonaId = 10, Nombre = "Sebastian Bach" });
    temp.Add(new Persona() { PersonaId = 11, Nombre = "Johanes Beethoven" });
    temp.Add(new Persona() { PersonaId = 12, Nombre = "Nicollo Paganinni" });
    temp.Add(new Persona() { PersonaId = 13, Nombre = "Sebastian Bach" });
    temp.Add(new Persona() { PersonaId = 14, Nombre = "Johanes Beethoven" });
    temp.Add(new Persona() { PersonaId = 15, Nombre = "Nicollo Paganinni" });
    temp.Add(new Persona() { PersonaId = 16, Nombre = "Sebastian Bach" });
    temp.Add(new Persona() { PersonaId = 17, Nombre = "Johanes Beethoven" });
    temp.Add(new Persona() { PersonaId = 18, Nombre = "Nicollo Paganinni" });
    return temp;
  }

}